#!/bin/bash

#######################################################
# This script is for pushing new col version to production
# Modified and puppetized by Hugo van Duijn
#######################################################

# Define all the constant variables
# Change the variables' definitions here to configure this script
# Note: Filename 'CoL_production.tar' is hard wired in this script
WORKSPACE_DIR="<%= @workspace_dir %>"
DB_USERNAME="<%= @mysql_user %>"
DB_PASSWORD="<%= @mysql_password %>"
DCUPDATEPWD="<%= @dcupdate_password %>"  # DarwinCore Update password
DEBUG=0
TIMESTAMP=$(date +%s)

# Give time at the beginning of this script
echo "update_col_server.sh started: " `date`

# Change directory to WORKSPACE_DIR
cd $WORKSPACE_DIR

# Get databases
echo "list mysql databases"

mysql -u$DB_USERNAME -p$DB_PASSWORD -B --skip-column-names -e \
"SELECT SCHEMA_NAME FROM information_schema.SCHEMATA WHERE SCHEMA_NAME like 'COL_Production%' ORDER BY SCHEMA_NAME;"

AMOUNTOFDATABASES=$(mysql -u$DB_USERNAME -p$DB_PASSWORD -B --skip-column-names -e \
"SELECT SCHEMA_NAME FROM information_schema.SCHEMATA WHERE SCHEMA_NAME like 'COL_Production%' ORDER BY SCHEMA_NAME;" | wc -l)

FIRSTDATABASE=$(mysql -u$DB_USERNAME -p$DB_PASSWORD -B --skip-column-names -e \
"SELECT SCHEMA_NAME FROM information_schema.SCHEMATA WHERE SCHEMA_NAME like 'COL_Production%' ORDER BY SCHEMA_NAME ASC LIMIT 1;")

LATESTDATABASE=$(mysql -u$DB_USERNAME -p$DB_PASSWORD -B --skip-column-names -e \
"SELECT SCHEMA_NAME FROM information_schema.SCHEMATA WHERE SCHEMA_NAME like 'COL_Production%' ORDER BY SCHEMA_NAME DESC LIMIT 1;")

echo Amount of databases: $AMOUNTOFDATABASES
echo First database : $FIRSTDATABASE
echo Latest database : $LATESTDATABASE

if [ "$AMOUNTOFDATABASES" -gt "3" ]
then
  echo Deleting $FIRSTDATABASE
  echo $(mysql -u$DB_USERNAME -p$DB_PASSWORD -B -e \
  "DROP DATABASE $FIRSTDATABASE;")
fi

if [ "$AMOUNTOFDATABASES" -gt "4" ]
then
  FIRSTDATABASE=$(mysql -u$DB_USERNAME -p$DB_PASSWORD -B --skip-column-names -e \
  "SELECT SCHEMA_NAME FROM information_schema.SCHEMATA WHERE SCHEMA_NAME like 'COL_Production%' ORDER BY SCHEMA_NAME ASC LIMIT 1;")
  echo Deleting $FIRSTDATABASE
  echo $(mysql -u$DB_USERNAME -p$DB_PASSWORD -B -e \
  "DROP DATABASE $FIRSTDATABASE;")
fi

rm -rf /var/www/htdocs/oldcol
cp -R /var/www/htdocs/col/* /var/www/htdocs/oldcol
cp -R /var/www/htdocs/newcol/* /var/www/htdocs/col

# fix permissions and set replace rewrite base in htaccess
sed -i "s/newcol/col/g" /var/www/htdocs/col/public/.htaccess

chown -R root:www-data /var/www/htdocs/col
find /var/www/htdocs/col -type f -print -exec chmod 640 {} \;
find /var/www/htdocs/col -type d -print -exec chmod 750 {} \;
rm -rf /var/www/htdocs/col/application/log/*
rm -rf /var/www/htdocs/col/application/cache/*
chmod 777 /var/www/htdocs/col/application/log
chmod 777 /var/www/htdocs/col/application/cache

# updating listmatching config file with new database name
sed -i "s/DBNAME.*/DBNAME\",\"$LATESTDATABASE\"\)\;/g" /var/www/htdocs/listmatching/config.php


# updating webservices config file with new database name
sed -i "s/<dbname>COL_Production.*/<dbname>$LATESTDATABASE<\/dbname>/g" /var/www/htdocs/webservices/application/configs/application.xml

# creating DarwinCore Archives after new release, disabled, running on workbench from okt 2016
echo "Creating DarwinCore Archives"
sed -i "s/dbname =.*/dbname = $LATESTDATABASE/g" /var/www/htdocs/DCA_Export_v1.3/config/settings.ini
# cd /var/www/htdocs/DCA_Export_v1.3
# php /var/www/htdocs/DCA_Export_v1.3/monthly.php  -w $DCUPDATEPWD -d `date +%F`
# chmod -R 777 /var/www/htdocs/DCA_Export_v1.3/zip




